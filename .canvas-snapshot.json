{
  "quiz": {
    "id": 53504,
    "title": "Object Inheritance Quiz",
    "html_url": "https://learning.flatironschool.com/courses/7559/quizzes/53504",
    "mobile_url": "https://learning.flatironschool.com/courses/7559/quizzes/53504?force_user=1&persist_headless=1",
    "description": "<div id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"python-p3-quiz-object-inheritance\"></div>\n<header class=\"fis-header\"><a class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/python-p3-quiz-object-inheritance/issues/new\" target=\"_blank\"><img id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"></a></header>\n<p>It's time to check your knowledge! Use this quiz to create a custom study guide. Note any answers that were marked incorrect, so you can study the relevant material and try this quiz again.</p>\n<p>If you don't know the answer to a question, please do not guess. Instead, select \"I don't know\". It's OK not to know everything and to admit when we're unsure.</p>",
    "quiz_type": "assignment",
    "time_limit": null,
    "timer_autosubmit_disabled": false,
    "shuffle_answers": true,
    "show_correct_answers": true,
    "scoring_policy": "keep_highest",
    "allowed_attempts": 3,
    "one_question_at_a_time": true,
    "question_count": 5,
    "points_possible": 5.0,
    "cant_go_back": false,
    "access_code": null,
    "ip_filter": null,
    "due_at": null,
    "lock_at": null,
    "unlock_at": null,
    "published": false,
    "unpublishable": true,
    "locked_for_user": true,
    "lock_info": {
      "missing_permission": "participate_as_student",
      "asset_string": "quizzes:quiz_53504"
    },
    "lock_explanation": "This quiz is currently locked.",
    "hide_results": null,
    "show_correct_answers_at": null,
    "hide_correct_answers_at": null,
    "all_dates": [
      {
        "due_at": null,
        "unlock_at": null,
        "lock_at": null,
        "base": true
      }
    ],
    "can_unpublish": true,
    "can_update": true,
    "require_lockdown_browser": false,
    "require_lockdown_browser_for_results": false,
    "require_lockdown_browser_monitor": false,
    "lockdown_browser_monitor_data": "",
    "speed_grader_url": null,
    "permissions": {
      "manage": true,
      "read": true,
      "create": true,
      "update": true,
      "submit": true,
      "preview": true,
      "delete": true,
      "read_statistics": true,
      "grade": true,
      "review_grades": true,
      "view_answer_audits": true
    },
    "quiz_reports_url": "https://learning.flatironschool.com/api/v1/courses/7559/quizzes/53504/reports",
    "quiz_statistics_url": "https://learning.flatironschool.com/api/v1/courses/7559/quizzes/53504/statistics",
    "message_students_url": "https://learning.flatironschool.com/api/v1/courses/7559/quizzes/53504/submission_users/message",
    "section_count": 1,
    "important_dates": false,
    "quiz_submission_versions_html_url": "https://learning.flatironschool.com/courses/7559/quizzes/53504/submission_versions",
    "assignment_id": 263583,
    "one_time_results": false,
    "only_visible_to_overrides": false,
    "assignment_group_id": 25101,
    "show_correct_answers_last_attempt": true,
    "version_number": 4,
    "has_access_code": false,
    "post_to_sis": false,
    "migration_id": "g7992d14cfaa73fc117f88a940d7e55da",
    "in_paced_course": false,
    "question_types": [

    ]
  },
  "questions": [
    {
      "id": 366075,
      "quiz_id": 53504,
      "quiz_group_id": null,
      "assessment_question_id": 632177,
      "position": null,
      "question_name": "Object Inheritance: Fundamentals",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Object inheritance means that an object can use all of the attributes and\nbehaviors (i.e. all of the methods) of the parent/super class.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:  Defining Object Inheritance",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7559/assignments/263604?module_item_id=629237\">Defining Object Inheritance</a></li></ul><p></p>",
      "answers": [
        {
          "id": 8817,
          "text": "",
          "html": "<p>True</p>",
          "comments": "",
          "comments_html": "<p>Correct! Objects (or children) that inherit from a parent class have access to\nthe parent's attributes, such as instance variables, and methods.</p>",
          "weight": 100.0
        },
        {
          "id": 8813,
          "text": "",
          "html": "<p>False</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        },
        {
          "id": 2663,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366076,
      "quiz_id": 53504,
      "quiz_group_id": null,
      "assessment_question_id": 632175,
      "position": null,
      "question_name": "Object Inheritance: Fundamentals",
      "question_type": "multiple_choice_question",
      "question_text": "<p>We have a <code>Computer</code> class and would like to declare <code>Laptop</code> as a subclass of\n<code>Computer</code>. Which syntax should we use?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:  Defining Object Inheritance",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7559/assignments/263604?module_item_id=629237\">Defining Object Inheritance</a></li></ul><p></p>",
      "answers": [
        {
          "id": 8102,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Laptop</span><span class=\"p\">(</span><span class=\"no\">Computer</span><span class=\"p\">):</span> <span class=\"n\">pass</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>Yes! We use the <em>less than</em> symbol followed by the name of the parent class to\nspecify that <code>Laptop</code> inherits from <code>Computer</code>.</p>",
          "weight": 100.0
        },
        {
          "id": 9665,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Laptop</span><span class=\"p\">:</span> <span class=\"n\">pass</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>This code declares the Laptop class but it doesn't cause the Laptop class to\ninherit from Computer. How can we make that happen? What's missing?</p>",
          "weight": 0.0
        },
        {
          "id": 6093,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Computer</span><span class=\"p\">(</span><span class=\"no\">Laptop</span><span class=\"p\">):</span> <span class=\"n\">pass</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>This would actually declare the <code>Computer</code> class and cause it to inherit\nfrom<code>Laptop</code>. How can we declare the <code>Laptop</code> class and make it inherit\nfrom<code>Computer</code> instead?</p>",
          "weight": 0.0
        },
        {
          "id": 9528,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366077,
      "quiz_id": 53504,
      "quiz_group_id": null,
      "assessment_question_id": null,
      "position": 3,
      "question_name": "Object Inheritance: Fundamentals",
      "question_type": "multiple_choice_question",
      "question_text": "<div class=\"highlight\">\n<pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Computer:</span>\n\n  <span class=\"k\">def</span> __<span class=\"nf\">init__</span><span class=\"p\">(self, </span><span class=\"nb\">name</span><span class=\"p\">,</span> <span class=\"n\">ram</span><span class=\"p\">,</span> <span class=\"n\">hd</span><span class=\"p\">)</span>\n    self.<span class=\"vi\">name</span> <span class=\"o\">=</span> <span class=\"nb\">name</span>\n    self.<span class=\"vi\">ram_amount</span> <span class=\"o\">=</span> <span class=\"n\">ram</span>\n    self.<span class=\"vi\">hd_size</span> <span class=\"o\">=</span> <span class=\"n\">hd</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">calculate(self):</span>\n    return <span class=\"s2\">\"Crunching numbers!\"</span>\n\n</code></pre>\n</div>\n<p>To overwrite an inherited method from <code>Computer</code>, which syntax should be used?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:  Defining Object Inheritance",
      "correct_comments_html": null,
      "incorrect_comments_html": null,
      "neutral_comments_html": "<p><strong>Source/s:</strong></p>\n<ul>\n<li><a href=\"/courses/7559/assignments/263604?module_item_id=629237\">Defining Object Inheritance</a></li>\n</ul>\n<p>&nbsp;</p>",
      "answers": [
        {
          "weight": 100,
          "migration_id": "RESPONSE_3501",
          "id": 3501,
          "text": "class Laptop(Computer): def calculate(self): return \"Processing mathematics!\"",
          "html": "<div class=\"highlight\">\n<pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Laptop(</span><span class=\"no\">Computer):</span>\n  <span class=\"k\">def</span> <span class=\"nf\">calculate(self):</span>\n    return <span class=\"s2\">\"Processing mathematics!\"</span>\n</code></pre>\n</div>",
          "comments": "Perfect! We declare the method with the same name inside the subclass and then write our code.",
          "comments_html": "Perfect! We declare the method with the same name inside the subclass and then\nwrite our code."
        },
        {
          "weight": 0,
          "migration_id": "RESPONSE_3358",
          "id": 3358,
          "text": "class Laptop: def calculate(self): return \"Processing mathematics!\"",
          "html": "<div class=\"highlight\">\n<pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Laptop:</span>\n  <span class=\"k\">def</span> <span class=\"nf\">calculate(self):</span>\n    return <span class=\"s2\">\"Processing mathematics!\"</span>\n\n</code></pre>\n</div>",
          "comments": "Laptop is being declared, but it isn't inheriting from a parent class. How do we fix this?",
          "comments_html": "Laptop is being declared, but it isn't inheriting from a parent class. How do\nwe fix this?"
        },
        {
          "weight": 0,
          "migration_id": "RESPONSE_8541",
          "id": 8541,
          "text": "I don't know.",
          "html": "I don't know.",
          "comments": "Be sure to study the source/s for this question. You'll get it next time."
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366078,
      "quiz_id": 53504,
      "quiz_group_id": null,
      "assessment_question_id": 632176,
      "position": null,
      "question_name": "Object Inheritance: Fundamentals",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Consider the following code:</p>\n<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">DailyRoutine</span><span class=\"p\">:</span>\n  <span class=\"k\">def</span> <span class=\"nf\">morning</span><span class=\"p\">(</span><span class=\"nb\">self</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"coffee\"</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"shower\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MondayRoutine</span><span class=\"p\">(</span><span class=\"no\">DailyRoutine</span><span class=\"p\">):</span>\n  <span class=\"k\">def</span> <span class=\"nf\">morning</span><span class=\"p\">(</span><span class=\"nb\">self</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"jog\"</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"coffee\"</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"shower\"</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>We want the <code>morning</code> method in the <code>MondayRoutine</code> class to add to the parent\nclass's functionality, rather than completely overwrite it. How do we do this in\na way that doesn't duplicate so much code?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Super",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7559/pages/super\">Super</a></li></ul><p></p>",
      "answers": [
        {
          "id": 910,
          "text": "",
          "html": "<p>Use <code>super().morning()</code> in MondayRoutine<code>morning()</code> method.</p>",
          "comments": "",
          "comments_html": "<p>Correct! We can call <code>super()</code> anywhere we want in the method to call the\nparent's method, like so:</p>\n<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">MondayRoutine</span><span class=\"p\">(</span><span class=\"no\">DailyRoutine</span><span class=\"p\">):</span> <span class=\"k\">def</span> <span class=\"nf\">morning</span><span class=\"p\">(</span><span class=\"nb\">self</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"jog\"</span><span class=\"p\">)</span>\n    <span class=\"k\">super</span><span class=\"p\">().</span><span class=\"nf\">morning</span><span class=\"p\">()</span>\n</code></pre></div>",
          "weight": 100.0
        },
        {
          "id": 3739,
          "text": "",
          "html": "<p>Use <code>super()</code> in the <code>MondayRoutine</code> class.</p>\n\n<p>&nbsp;</p>",
          "comments": "",
          "comments_html": "<p>Not quite. It seems like we are missing something in the super call.</p>\n\n<p>You might want to review the resource/s for this question.</p>",
          "weight": 0.0
        },
        {
          "id": 8055,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366079,
      "quiz_id": 53504,
      "quiz_group_id": null,
      "assessment_question_id": 632174,
      "position": null,
      "question_name": "Object Inheritance: Super",
      "question_type": "multiple_choice_question",
      "question_text": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Furniture</span><span class=\"p\">:</span>\n  <span class=\"k\">def</span> <span class=\"nf\">build</span><span class=\"p\">(</span><span class=\"nb\">self</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Your furniture is being built\"</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>We have a parent class <code>Furniture</code> and a subclass <code>Table</code>. In the <code>Table</code> class,\nwe want to be able to call <code>build()</code> and have it print \"You have chosen a table\"\nfollowed by \"Your furniture is being built\". Which code block achieves this?\nChoose the <strong>best</strong> option.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:  Super",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7559/pages/super?module_item_id=629238\">Super</a></li></ul><p></p>",
      "answers": [
        {
          "id": 9008,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Table</span><span class=\"p\">(</span><span class=\"no\">Furniture</span><span class=\"p\">):</span>\n  <span class=\"k\">def</span> <span class=\"nf\">build</span><span class=\"p\">(</span><span class=\"nb\">self</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"You have chosen a table\"</span><span class=\"p\">)</span>\n    <span class=\"k\">super</span><span class=\"p\">().</span><span class=\"nf\">build</span><span class=\"p\">()</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>Yes! If <code>Table</code> inherits from <code>Furniture</code> we can use the <code>Furniture build()</code>\nmethod by calling <code>super().build()</code> after running whatever extra functionality\nwe need to run first.</p>",
          "weight": 100.0
        },
        {
          "id": 4611,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Table</span><span class=\"p\">(</span><span class=\"no\">Furniture</span><span class=\"p\">):</span>\n  <span class=\"k\">def</span> <span class=\"nf\">build</span><span class=\"p\">(</span><span class=\"nb\">self</span><span class=\"p\">):</span> <span class=\"k\">super</span><span class=\"p\">().</span><span class=\"nf\">build</span><span class=\"p\">()</span> <span class=\"err\">&nbsp;</span> <span class=\"err\">&nbsp;</span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"You have chosen a table\"</span><span class=\"p\">)</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>Almost. In which order will the strings print? How can we make them print in the\ncorrect order?</p>",
          "weight": 0.0
        },
        {
          "id": 3986,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Table</span><span class=\"p\">:</span>\n  <span class=\"k\">def</span> <span class=\"nf\">build</span><span class=\"p\">(</span><span class=\"nb\">self</span><span class=\"p\">):</span> <span class=\"err\">&nbsp;</span> <span class=\"err\">&nbsp;</span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"You have chosen a table\"</span><span class=\"p\">)</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Your furniture is being built\"</span><span class=\"p\">)</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>Not quite. While this will achieve what we want, we have repeated ourselves.\nWhat can we do instead to DRY up our code and ensure the strings print in the\ncorrect order?</p>",
          "weight": 0.0
        },
        {
          "id": 9100,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Table</span><span class=\"p\">(</span><span class=\"no\">Furniture</span><span class=\"p\">):</span> <span class=\"k\">def</span> <span class=\"nf\">build</span><span class=\"p\">(</span><span class=\"nb\">self</span><span class=\"p\">):</span> <span class=\"err\">&nbsp;</span> <span class=\"err\">&nbsp;</span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"You have chosen a table\"</span><span class=\"p\">)</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Your furniture is being built\"</span><span class=\"p\">)</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>Not quite. While this will achieve what we want, we have repeated ourselves and\nwe've also overwritten the parent's method. What can we do instead to DRY up our\ncode and ensure the strings print in the correct order?</p>",
          "weight": 0.0
        },
        {
          "id": 2265,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    }
  ]
}